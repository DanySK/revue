@startuml

!startsub Monitoring

interface Monitor {
  + registerDevice(device: Device): void
  + enableDevice(deviceId: DeviceId): void
  + disableDevice(deviceId: DeviceId): void
  + createSecurityRule(): void
  + deleteSecurityRule(): void
  + getHistory(deviceId: DeviceId): List<Anomaly>
}
note left: Service
Monitor --> User : uses

interface User {
 + getUserId(): Int
 + getName(): String
 + addContact(c: Contact): void
 + removeContact(c: Contact): void
}
note left: Entity
User o-right- Contact

interface Contact {
 + getValue(): String
 + setValue(v: String): void
 + getContactType(): ContactType
 + setContactType(c: ContactType): void
}
note right: Value Object

enum ContactType {
  EMAIL
  SMS
}
Contact o-- ContactType

!endsub Monitoring

@enduml
