"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[2493],{7401:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var i=t(4848),o=t(8453);const s={},r="Implementation details",a={id:"report/implementation/implementation",title:"Implementation details",description:"Principles",source:"@site/docs/report/implementation/implementation.md",sourceDirName:"report/implementation",slug:"/report/implementation/",permalink:"/revue/docs/report/implementation/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Implementation",permalink:"/revue/docs/category/implementation"},next:{title:"Web of Things",permalink:"/revue/docs/report/implementation/web-of-thing"}},c={},l=[{value:"Principles",id:"principles",level:2},{value:"Dependency Inversion Principle",id:"dependency-inversion-principle",level:3},{value:"Technologies",id:"technologies",level:2},{value:"JSON Web Token",id:"json-web-token",level:3},{value:"Kafka",id:"kafka",level:3},{value:"Socket.io",id:"socketio",level:3},{value:"Object Recognition with YOLO",id:"object-recognition-with-yolo",level:3},{value:"Media Server",id:"media-server",level:3},{value:"WebRTC",id:"webrtc",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components},{Summary:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Summary",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"implementation-details",children:"Implementation details"})}),"\n",(0,i.jsx)(n.h2,{id:"principles",children:"Principles"}),"\n",(0,i.jsx)(n.h3,{id:"dependency-inversion-principle",children:"Dependency Inversion Principle"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Dependency_inversion_principle",children:(0,i.jsx)(n.strong,{children:"Dependency Inversion Principle"})})," (DIP) has been\napplied to the system to decouple the high-level modules from the low-level modules.\nThis principle states that high-level modules should not depend on low-level modules, but both should depend on\nabstractions.\nEvery module in the system depends on interfaces, to let the implementation be changed without affecting the other\nmodules."]}),"\n",(0,i.jsx)(n.p,{children:"This type of principle has been applied to the entire system, from the message broker to the databases, to allow rapid\nchanges or evolutions."}),"\n",(0,i.jsx)(t,{title:"Example: AlarmEventsHub interface",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"export interface AlarmEventsHub {\n    publishAnomaly(anomaly: Anomaly): void\n\n    subscribeToMeasurements(handler: (measurement: Measurement) => void): void\n\n    subscribeToDetections(handler: (detection: Detection) => void): void\n\n    subscribeToDevices(handler: (deviceEvent: DeviceEvent) => void): void\n\n    addMeasurementTopics(topics: string[]): void\n\n    removeMeasurementTopics(topics: string[]): void\n}\n"})})}),"\n",(0,i.jsx)(n.p,{children:"Or simply a Repository management interface:"}),"\n",(0,i.jsx)(t,{title:"Example: SecurityRuleRepository interface",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"export interface SecurityRuleRepository {\n    getSecurityRules(): Promise<SecurityRule[]>\n\n    getSecurityRuleById(id: SecurityRuleId): Promise<SecurityRule>\n\n    saveSecurityRule(securityRule: SecurityRule): Promise<void>\n\n    updateSecurityRule(securityRule: SecurityRule): Promise<void>\n\n    removeSecurityRule(securityRuleId: SecurityRuleId): Promise<void>\n\n    getRangeRules(): Promise<RangeRule[]>\n\n    getIntrusionRules(): Promise<IntrusionRule[]>\n\n    enableSecurityRule(securityRuleId: SecurityRuleId): Promise<void>\n\n    disableSecurityRule(securityRuleId: SecurityRuleId): Promise<void>\n}\n"})})}),"\n",(0,i.jsx)(n.p,{children:"These interfaces are implemented by the classes that need to use them, and they can be changed without affecting the\ncore modules."}),"\n",(0,i.jsx)(n.h2,{id:"technologies",children:"Technologies"}),"\n",(0,i.jsx)(n.h3,{id:"json-web-token",children:"JSON Web Token"}),"\n",(0,i.jsxs)(n.p,{children:["The Auth service is responsible for the authentication of the user and the generation of\nthe ",(0,i.jsx)(n.a,{href:"https://jwt.io/",children:"Json Web Token"})," (JWT) token that will be used to authenticate the user in the other services.\nThe generated token can be validated from each microservice to ensure that the user is authenticated.\nFollowing this approach, in case of failure of the authentication service, the user can still access the system until\nits token validity expires."]}),"\n",(0,i.jsx)(n.h3,{id:"kafka",children:"Kafka"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://kafka.apache.org",children:"Apache Kafka"})," is the technology chosen to handle intra-system real-time communications.\nIn particular, ",(0,i.jsx)(n.a,{href:"https://kafka.js.org",children:"KafkaJS"})," and ",(0,i.jsx)(n.a,{href:"https://kafka-python.readthedocs.io/en/master/",children:"kafka-python"}),"\nclients have been used respectively for the\n",(0,i.jsx)(n.a,{href:"https://nodejs.org/en",children:"Node.js"})," and ",(0,i.jsx)(n.a,{href:"https://flask.palletsprojects.com/en/3.0.x/",children:"Flask"})," services.\nKafka is an open-source distributed event streaming platform capable of handling\nplenty of events per second."]}),"\n",(0,i.jsx)(t,{title:"Example: Kafka consumer",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"this.consumer\n    .startConsuming(topics, false, (message: KafkaMessage): void => {\n        // Message arrived!\n    })\n    .then((): void => console.log('Consumer started'))\n"})})}),"\n",(0,i.jsx)(t,{title:"Example:python Kafka producer",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def publish_detection(self, camera: str, object_class: str):\n    detection: Detection = DetectionFactory.create_detection(\n        datetime.now(), camera_code, object_class\n    )\n\n\ndetection_to_publish = transform_keys(\n    json.loads(detection.model_dump_json()), snake_to_camel\n)\nself._producer.produce("detections." + camera_code, detection_to_publish)\n'})})}),"\n",(0,i.jsx)(n.h3,{id:"socketio",children:"Socket.io"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://socket.io/",children:"Socket IO"})," is a library that enables real-time, bidirectional and event-based communication between\nthe browser and the server.\nIt has been exploited to implement the real-time communication between the user and the system, in particular for\npushing notifications or sending the measurements to the user.\nA security layer has been added to socket servers to ensure secure connections. Also for this feature, the JWT token\ngenerated when the user logs in has been used."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"io.use(function (socket, next): void {\n    if (socket.handshake.query && socket.handshake.query.token) {\n        if (jwtManager.verify(socket.handshake.query.token as string)) next()\n    } else {\n        //Authentication error\n    }\n})\n"})}),"\n",(0,i.jsx)(n.h3,{id:"object-recognition-with-yolo",children:"Object Recognition with YOLO"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://pjreddie.com/darknet/yolo",children:"You Only Look Once"})," (YOLO) is a state-of-the-art, efficient real-time object\ndetection algorithm.\nYOLO can identify object classes and their positions within a video.\nThis algorithm is used by the ",(0,i.jsx)(n.strong,{children:"Recognition"})," service to perform object detection on video streams generated by the\ndevices, in accordance with active security rules."]}),"\n",(0,i.jsx)(t,{title:"Example: YOLO object detection",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'class RecognitionService(ABC):\n\n    @abstractmethod\n    def start_recognizing(self, camera_code: str) -> None:\n        """\n        It starts to recognize the video stream produced by a camera.\n        If it is already recognizing the camera, it does nothing.\n        :param camera_code: the camera code of the camera to start recognizing\n        """\n\n    @abstractmethod\n    def stop_recognizing(self, camera_code: str) -> None:\n        """\n        It stops recognizing the video stream produced by a camera.\n        If it is not recognizing the camera, it does nothing.\n        :param camera_code: the camera code of the camera to stop recognizing\n        """\n\n    @abstractmethod\n    def stop_all_recognizing(self):\n        """\n        It stops recognizing the video stream produced by all cameras.\n        """\n'})})}),"\n",(0,i.jsx)(n.h3,{id:"media-server",children:"Media Server"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://github.com/bluenviron/mediamtx",children:"MediaMTX"})," has been used to allow the system to support multiple\nprotocols without needing a separate process for each one.\nAll cameras connect to the media server, which handles video stream distribution across different protocols.\nIn this configuration, the cameras use the RTSP protocol to send video streams, which are then consumed\nby the ",(0,i.jsx)(n.strong,{children:"Recognition"})," component.\nSimultaneously, the ",(0,i.jsx)(n.strong,{children:"Frontend"})," uses the WebRTC protocol to access the video streams."]}),"\n",(0,i.jsx)(n.h3,{id:"webrtc",children:"WebRTC"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.a,{href:"https://webrtc.org/",children:"WebRTC"})," protocol is used to simulate camera streams, chosen for its ability to stream video\nand audio in real-time with ease.\nIt requires no plugins or software installation, is supported by all major browsers,\nand is open-source.\nDeveloped by Google, WebRTC implements\nthe ",(0,i.jsx)(n.a,{href:"https://www.researchgate.net/publication/316684665_Congestion_Control_for_Real-Time_Communication",children:"Google Congestion Control"}),"\n(GCC) algorithm, which enables real-time streaming of video and audio with low latency."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var i=t(6540);const o={},s=i.createContext(o);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);