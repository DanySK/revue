"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[3965],{923:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Report","collapsible":false,"collapsed":false,"customProps":{"description":"Project report"},"className":"red","items":[{"type":"link","label":"Introduction","href":"/revue/docs/report/introduction","docId":"report/introduction","unlisted":false},{"type":"category","label":"Analysis","collapsible":true,"collapsed":true,"customProps":{"description":"Analysis breakdown"},"className":"red","items":[{"type":"link","label":"Business Requirements","href":"/revue/docs/report/analysis/business-requirements","docId":"report/analysis/business-requirements","unlisted":false},{"type":"link","label":"Functional Requirements","href":"/revue/docs/report/analysis/functional-requirements","docId":"report/analysis/functional-requirements","unlisted":false},{"type":"link","label":"Quality Attributes","href":"/revue/docs/report/analysis/quality-attributes","docId":"report/analysis/quality-attributes","unlisted":false}],"href":"/revue/docs/category/analysis"},{"type":"category","label":"(Domain-Driven) Design","collapsible":true,"collapsed":true,"customProps":{"description":"A description of the design process"},"className":"red","items":[{"type":"link","label":"Event Storming","href":"/revue/docs/report/design/event-storming","docId":"report/design/event-storming","unlisted":false},{"type":"link","label":"Bounded Contexts","href":"/revue/docs/report/design/bounded-contexts","docId":"report/design/bounded-contexts","unlisted":false},{"type":"category","label":"Architecture","collapsible":true,"collapsed":true,"customProps":{"description":"Architecture documentation"},"className":"red","items":[{"type":"link","label":"Documentation","href":"/revue/docs/report/design/architecture/documentation","docId":"report/design/architecture/documentation","unlisted":false},{"type":"link","label":"Microservices","href":"/revue/docs/report/design/architecture/microservices","docId":"report/design/architecture/microservices","unlisted":false},{"type":"link","label":"Microservices patterns","href":"/revue/docs/report/design/architecture/patterns","docId":"report/design/architecture/patterns","unlisted":false}],"href":"/revue/docs/category/architecture"},{"type":"link","label":"Detailed Design","href":"/revue/docs/report/design/detailed-design","docId":"report/design/detailed-design","unlisted":false}],"href":"/revue/docs/category/domain-driven-design"},{"type":"category","label":"Implementation","collapsible":true,"collapsed":true,"customProps":{"description":"Non-trivial implementation details"},"className":"red","items":[{"type":"link","label":"Implementation details","href":"/revue/docs/report/implementation/","docId":"report/implementation/implementation","unlisted":false},{"type":"link","label":"Web of Things","href":"/revue/docs/report/implementation/web-of-thing","docId":"report/implementation/web-of-thing","unlisted":false}],"href":"/revue/docs/category/implementation"},{"type":"link","label":"DevOps","href":"/revue/docs/report/devops","docId":"report/devops","unlisted":false},{"type":"category","label":"Deployment","collapsible":true,"collapsed":true,"customProps":{"description":"Deployment details"},"className":"red","items":[{"type":"link","label":"Docker Compose","href":"/revue/docs/report/deployment/docker-compose","docId":"report/deployment/docker-compose","unlisted":false},{"type":"link","label":"Kubernetes","href":"/revue/docs/report/deployment/kubernetes","docId":"report/deployment/kubernetes","unlisted":false}],"href":"/revue/docs/category/deployment"},{"type":"link","label":"Self-assessment / Validation","href":"/revue/docs/report/testing","docId":"report/testing","unlisted":false},{"type":"link","label":"Conclusions","href":"/revue/docs/report/conclusions","docId":"report/conclusions","unlisted":false}],"href":"/revue/docs/category/report"}]},"docs":{"report/analysis/business-requirements":{"id":"report/analysis/business-requirements","title":"Business Requirements","description":"Glossary","sidebar":"tutorialSidebar"},"report/analysis/functional-requirements":{"id":"report/analysis/functional-requirements","title":"Functional Requirements","description":"1. User Management","sidebar":"tutorialSidebar"},"report/analysis/quality-attributes":{"id":"report/analysis/quality-attributes","title":"Quality Attributes","description":"Quality attributes are non-functional requirements that define the system\'s main properties exploited for","sidebar":"tutorialSidebar"},"report/conclusions":{"id":"report/conclusions","title":"Conclusions","description":"Future developments of this system will certainly have","sidebar":"tutorialSidebar"},"report/deployment/docker-compose":{"id":"report/deployment/docker-compose","title":"Docker Compose","description":"Revue offers two deployment methods: Docker Compose to simplify the development phase and Kubernetes for","sidebar":"tutorialSidebar"},"report/deployment/kubernetes":{"id":"report/deployment/kubernetes","title":"Kubernetes","description":"Revue can be deployed using Kubernetes.","sidebar":"tutorialSidebar"},"report/design/architecture/documentation":{"id":"report/design/architecture/documentation","title":"Documentation","description":"We chose to use a microservices architecture for the system.","sidebar":"tutorialSidebar"},"report/design/architecture/microservices":{"id":"report/design/architecture/microservices","title":"Microservices","description":"Decomposition Strategy","sidebar":"tutorialSidebar"},"report/design/architecture/patterns":{"id":"report/design/architecture/patterns","title":"Microservices patterns","description":"Communication patterns","sidebar":"tutorialSidebar"},"report/design/bounded-contexts":{"id":"report/design/bounded-contexts","title":"Bounded Contexts","description":"After the event storming session, the following contexts have been identified:","sidebar":"tutorialSidebar"},"report/design/detailed-design":{"id":"report/design/detailed-design","title":"Detailed Design","description":"N.B. In the diagrams of this section, interface notation has been used to represent the main concepts, however this will","sidebar":"tutorialSidebar"},"report/design/event-storming":{"id":"report/design/event-storming","title":"Event Storming","description":"Event Storming is a workshop format for quickly exploring complex business domains.","sidebar":"tutorialSidebar"},"report/devops":{"id":"report/devops","title":"DevOps","description":"Build automation","sidebar":"tutorialSidebar"},"report/implementation/implementation":{"id":"report/implementation/implementation","title":"Implementation details","description":"Principles","sidebar":"tutorialSidebar"},"report/implementation/web-of-thing":{"id":"report/implementation/web-of-thing","title":"Web of Things","description":"Introduction","sidebar":"tutorialSidebar"},"report/introduction":{"id":"report/introduction","title":"Introduction","description":"Revue is a real-time video surveillance and environment monitoring system.","sidebar":"tutorialSidebar"},"report/testing":{"id":"report/testing","title":"Self-assessment / Validation","description":"To ensure a high-quality product, a series of tests that cover different aspects of the system has been implemented.","sidebar":"tutorialSidebar"}}}}')}}]);